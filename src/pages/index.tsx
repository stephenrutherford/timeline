import type { NextPage } from "next";
import { useState, useRef, useEffect } from "react";
import Head from "next/head";
import { useSession, signIn, signOut } from "next-auth/react";
import { trpc } from "../utils/trpc";
import Landing from "../components/Landing";
import ItemCardContainer from "../components/ItemCardContainer";
import UserMenu from "../components/UserMenu";
import UserAdjustments from "../components/UserAdjustments";
import EditItemForm from "../components/EditItemForm";
import { useAutoAnimate } from "@formkit/auto-animate/react";
import create from "zustand";
import useMenuStore from "../stores/menu";

type TechnologyCardProps = {
  name: string;
  description: string;
  documentation: string;
};

// type MyStore = {
//   show: boolean;
//   toggleShow: () => void;
// };

// const useStore = create<MyStore>((set) => ({
//   show: false,
//   toggleShow: () => set((state) => ({ show: !state.show })),
// }));

const Home: NextPage = () => {
  const { data, status } = useSession();
  const [showItemForm, setShowItemForm] = useState(true);
  const [listRef] = useAutoAnimate<HTMLDivElement>();

  const showEditMenu = useMenuStore((state) => state.showEditMenu);
  const toggleEditMenu = useMenuStore((state) => state.toggleEditMenu);
  const openEditMenu = useMenuStore((state) => state.openEditMenu);

  const showAdjustmentsMenu = useMenuStore(
    (state) => state.showAdjustmentsMenu
  );

  if (status === "loading") {
    return (
      <div>
        <p>Loading...</p>
      </div>
    );
  }

  if (!data) {
    return <Landing />;
  }

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="">
        {/* // * Menu */}
        <div
          className="flex flex-col p-4 w-[400px] fixed top-0 left-0 gap-4"
          ref={listRef}
        >
          <UserMenu />
          {showAdjustmentsMenu && <UserAdjustments />}

          <button onClick={toggleEditMenu} className="text-white">
            toggle menu
          </button>
          {showEditMenu && <EditItemForm />}
        </div>
        {/* // * Main Canvas */}
        <div className="container flex flex-col max-w-7xl h-screen border border-gray-700 items-center gap-10">
          {/* // ? Dashed Line */}
          <div className="absolute h-screen w-[2px] bg-transparent border-2 border-dashed border-gray-500 -z-10"></div>
          <ItemCardContainer />
        </div>
      </div>
    </>
  );
};

export default Home;
